# Generated by Django 5.1.4 on 2025-03-21 16:24

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=15)),
                ('password', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('userType', models.CharField(choices=[('1', 'FPO'), ('2', 'Business'), ('3', 'Institution'), ('4', 'Overseas'), ('5', 'Individual')], max_length=20)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('org_name', models.CharField(blank=True, default='', max_length=50)),
                ('email', models.EmailField(max_length=50)),
                ('phone', models.CharField(max_length=12, unique=True)),
                ('phone1', models.CharField(blank=True, default='', max_length=12)),
                ('gstin', models.CharField(blank=True, default='', max_length=15)),
                ('supply_place', models.CharField(choices=[('1', 'Andhra Pradesh'), ('2', 'Arunachal Pradesh'), ('3', 'Assam'), ('4', 'Bihar'), ('5', 'Chhattisgarh'), ('6', 'Goa'), ('7', 'Gujarat'), ('8', 'Haryana'), ('9', 'Himachal Pradesh'), ('10', 'Jharkhand'), ('11', 'Karnataka'), ('12', 'Kerala'), ('13', 'Madhya Pradesh'), ('14', 'Maharashtra'), ('15', 'Manipur'), ('16', 'Meghalaya'), ('17', 'Mizoram'), ('18', 'Nagaland'), ('19', 'Odisha'), ('20', 'Punjab'), ('21', 'Rajasthan'), ('22', 'Sikkim'), ('23', 'Tamil Nadu'), ('24', 'Telangana'), ('25', 'Tripura'), ('26', 'Uttar Pradesh'), ('27', 'Uttarakhand'), ('28', 'West Bengal'), ('29', 'Andaman and Nicobar Islands [UT]'), ('30', 'Chandigarh [UT]'), ('31', 'Dadra and Nagar Haveli and Daman and Diu [UT]'), ('32', 'Delhi [UT]'), ('33', 'Jammu and Kashmir [UT]'), ('34', 'Ladakh [UT]'), ('35', 'Lakshadweep [UT]'), ('36', 'Puducherry [UT]')], max_length=70)),
                ('gst_tmt', models.CharField(choices=[('1', 'Registered Business (Regular)'), ('2', 'Registered Business (Composition)'), ('3', 'Unregistered Business'), ('4', 'Individual')], max_length=20)),
                ('userAddress', models.CharField(max_length=200)),
                ('userCity', models.CharField(max_length=50)),
                ('userState', models.CharField(choices=[('1', 'Andhra Pradesh'), ('2', 'Arunachal Pradesh'), ('3', 'Assam'), ('4', 'Bihar'), ('5', 'Chhattisgarh'), ('6', 'Goa'), ('7', 'Gujarat'), ('8', 'Haryana'), ('9', 'Himachal Pradesh'), ('10', 'Jharkhand'), ('11', 'Karnataka'), ('12', 'Kerala'), ('13', 'Madhya Pradesh'), ('14', 'Maharashtra'), ('15', 'Manipur'), ('16', 'Meghalaya'), ('17', 'Mizoram'), ('18', 'Nagaland'), ('19', 'Odisha'), ('20', 'Punjab'), ('21', 'Rajasthan'), ('22', 'Sikkim'), ('23', 'Tamil Nadu'), ('24', 'Telangana'), ('25', 'Tripura'), ('26', 'Uttar Pradesh'), ('27', 'Uttarakhand'), ('28', 'West Bengal'), ('29', 'Andaman and Nicobar Islands [UT]'), ('30', 'Chandigarh [UT]'), ('31', 'Dadra and Nagar Haveli and Daman and Diu [UT]'), ('32', 'Delhi [UT]'), ('33', 'Jammu and Kashmir [UT]'), ('34', 'Ladakh [UT]'), ('35', 'Lakshadweep [UT]'), ('36', 'Puducherry [UT]')], max_length=20)),
                ('pinCode', models.CharField(max_length=6)),
                ('userAddress1', models.CharField(max_length=200)),
                ('userCity1', models.CharField(max_length=50)),
                ('userState1', models.CharField(choices=[('1', 'Andhra Pradesh'), ('2', 'Arunachal Pradesh'), ('3', 'Assam'), ('4', 'Bihar'), ('5', 'Chhattisgarh'), ('6', 'Goa'), ('7', 'Gujarat'), ('8', 'Haryana'), ('9', 'Himachal Pradesh'), ('10', 'Jharkhand'), ('11', 'Karnataka'), ('12', 'Kerala'), ('13', 'Madhya Pradesh'), ('14', 'Maharashtra'), ('15', 'Manipur'), ('16', 'Meghalaya'), ('17', 'Mizoram'), ('18', 'Nagaland'), ('19', 'Odisha'), ('20', 'Punjab'), ('21', 'Rajasthan'), ('22', 'Sikkim'), ('23', 'Tamil Nadu'), ('24', 'Telangana'), ('25', 'Tripura'), ('26', 'Uttar Pradesh'), ('27', 'Uttarakhand'), ('28', 'West Bengal'), ('29', 'Andaman and Nicobar Islands [UT]'), ('30', 'Chandigarh [UT]'), ('31', 'Dadra and Nagar Haveli and Daman and Diu [UT]'), ('32', 'Delhi [UT]'), ('33', 'Jammu and Kashmir [UT]'), ('34', 'Ladakh [UT]'), ('35', 'Lakshadweep [UT]'), ('36', 'Puducherry [UT]')], max_length=20)),
                ('pinCode1', models.CharField(max_length=6)),
                ('userNote', models.CharField(blank=True, default='', max_length=300)),
                ('password', models.CharField(default='Admin@1234', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('itemID', models.AutoField(primary_key=True, serialize=False)),
                ('itemName', models.CharField(max_length=200)),
                ('itemType', models.CharField(default='', max_length=20)),
                ('itemCat', models.CharField(max_length=200)),
                ('itemSku', models.CharField(default='', max_length=20)),
                ('itemHSNCode', models.CharField(default='', max_length=15)),
                ('itemUnit', models.CharField(max_length=200)),
                ('itemTaxPref', models.CharField(default='', max_length=10)),
                ('itemTaxRate', models.CharField(default='', max_length=10)),
                ('itemCostPrice', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('itemPrice', models.DecimalField(decimal_places=2, max_digits=10)),
                ('itemImg', models.ImageField(upload_to='static/')),
                ('itemActive', models.BooleanField(default=True)),
                ('itemInStock', models.BooleanField(default=True)),
                ('stockValue', models.IntegerField(default=0)),
                ('marketType', models.CharField(default='All', max_length=20)),
                ('featureItem', models.BooleanField(default=True)),
                ('itemDesc', models.CharField(default='', max_length=200)),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(max_length=255)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='omsapp.cart')),
                ('itemID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omsapp.item')),
            ],
        ),
        migrations.CreateModel(
            name='ItemStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stockValue', models.PositiveIntegerField(default=0)),
                ('itemID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omsapp.item')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dateTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('notificationText', models.CharField(max_length=200)),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('orderID', models.AutoField(primary_key=True, serialize=False)),
                ('orderNo', models.CharField(max_length=10)),
                ('orderDate', models.DateField(default=datetime.date.today)),
                ('orderStatus', models.CharField(default='Pending Order', max_length=25)),
                ('orderAmount', models.FloatField()),
                ('orderGSTAmount', models.FloatField()),
                ('orderDeduction', models.FloatField()),
                ('orderGrandTotal', models.FloatField()),
                ('schDeliveryDate', models.CharField(default=None, max_length=10, null=True)),
                ('schDeliveryTime', models.CharField(default=None, max_length=10, null=True)),
                ('remark', models.CharField(default=None, max_length=20, null=True)),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('invoiceID', models.AutoField(primary_key=True, serialize=False)),
                ('invoiceNo', models.CharField(default='0000000000', max_length=10)),
                ('invoiceDate', models.CharField(max_length=10)),
                ('invoiceFile', models.FileField(null=True, upload_to='uploads/', verbose_name='Invoice')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('orderID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omsapp.order')),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('deliveryID', models.AutoField(primary_key=True, serialize=False)),
                ('deliveryDate', models.DateField(default=datetime.date.today)),
                ('deliveryTime', models.CharField(max_length=15)),
                ('deliveryImg', models.ImageField(upload_to='static/')),
                ('inviceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omsapp.invoice')),
                ('orderID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omsapp.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemQty', models.IntegerField()),
                ('itemPrice', models.FloatField()),
                ('itemGST', models.FloatField()),
                ('itemGSTAmount', models.FloatField()),
                ('itemPricewithGST', models.FloatField()),
                ('deliveryDate', models.CharField(max_length=11)),
                ('deliveryTime', models.CharField(max_length=15)),
                ('orderStatus', models.CharField(default='Pending Order', max_length=25)),
                ('remark', models.CharField(default=None, max_length=100, null=True)),
                ('itemID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omsapp.item')),
                ('orderID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omsapp.order')),
            ],
        ),
    ]
